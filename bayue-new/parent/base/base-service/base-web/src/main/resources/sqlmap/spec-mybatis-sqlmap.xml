<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="ng.bayue.base.domain.SpecMapper">

	<resultMap type="ng.bayue.base.domain.SpecDO" id="SpecDOResultMap">
		<id column="id" property="id" />
        <result column="code" property="code"/>
        <result column="spec" property="spec"/>
        <result column="sort" property="sort"/>
        <result column="status" property="status"/>
        <result column="remark" property="remark"/>
        <result column="create_time" property="createTime"/>
        <result column="modify_time" property="modifyTime"/>
	</resultMap>

	<sql id="MybatisSpecDAO_all_column_fields">
	      id,code,spec,sort,status,remark,create_time,modify_time
 	</sql>
	<!-- 只有varchar char text类型 做 !='' 判断，生成代码时,其他类型时只做!=null 决断 0或fasle与空''是相同的，在mybatis中的动态语句中 -->
	<sql id="MybatisSpecDAO_dynamic_where_fields"><!-- xml转义字符需要 <![CDATA[   ]]> 标签-->
		<where>
			<if test="code != null  and code != '' "> AND code=#{code} </if>
			<if test="spec != null  and spec != '' "> AND spec=#{spec} </if>
			<if test="sort != null "> AND sort=#{sort} </if>
			<if test="status != null "> AND status=#{status} </if>
			<if test="remark != null  and remark != '' "> AND remark=#{remark} </if>
		</where>
 	</sql>

	<select id="MybatisSpecDAO_selectById" parameterType="long" resultMap="SpecDOResultMap">
	SELECT
		<include refid="MybatisSpecDAO_all_column_fields" />
	FROM
		base_spec
	WHERE
		 id = #{id}
	</select>

    <insert id="MybatisSpecDAO_insert" parameterType="ng.bayue.base.domain.SpecDO" useGeneratedKeys="true">
        <selectKey resultType="long" keyProperty="id" order="AFTER">
            SELECT LAST_INSERT_ID() AS id
        </selectKey>
        INSERT INTO base_spec(
				id,
				code,
				spec,
				sort,
				status,
				remark,
				create_time,
				modify_time
		)values(
				#{id},
				#{code},
				#{spec},
				#{sort},
				#{status},
				#{remark},
				#{createTime},
				#{modifyTime}
		)
    </insert>

	<update id="MybatisSpecDAO_updateById" parameterType="ng.bayue.base.domain.SpecDO">
		UPDATE base_spec
		SET
					code = #{code},
					spec = #{spec},
					sort = #{sort},
					status = #{status},
					remark = #{remark},
					modify_time = #{modifyTime}
		WHERE
			id = #{id}
	</update>

	<delete id="MybatisSpecDAO_deleteById" parameterType="long">
		DELETE FROM base_spec WHERE id = #{id}
	</delete>

	<update id="MybatisSpecDAO_update_dynamic" parameterType="ng.bayue.base.domain.SpecDO">
		UPDATE base_spec
		<set>
					<if test="code != null  and code != '' ">code=#{code},</if>
					<if test="spec != null  and spec != '' ">spec=#{spec},</if>
					<if test="sort != null ">sort=#{sort},</if>
					<if test="status != null ">status=#{status},</if>
					<if test="remark != null  and remark != '' ">remark=#{remark},</if>
					<if test="modifyTime != null ">modify_time=#{modifyTime},</if>
		</set>
		WHERE id = #{id}
	</update>

 	<select id="MybatisSpecDAO_select_dynamic" resultMap="SpecDOResultMap" parameterType="ng.bayue.base.domain.SpecDO">
	     SELECT
	     	<include refid="MybatisSpecDAO_all_column_fields" />
		 FROM
		 	base_spec
			<include refid="MybatisSpecDAO_dynamic_where_fields" />
 	</select>

 	<select id="MybatisSpecDAO_select_dynamic_count" resultType="long" parameterType="ng.bayue.base.domain.SpecDO">
	     SELECT
	     	count(1)
		 FROM
		 	base_spec
	 	<include refid="MybatisSpecDAO_dynamic_where_fields" />
 	</select>

 	<select id="MybatisSpecDAO_select_dynamic_page_query" resultMap="SpecDOResultMap" parameterType="ng.bayue.base.domain.SpecDO">
	     SELECT
	     	<include refid="MybatisSpecDAO_all_column_fields" />
		 FROM
		 	base_spec
	 	<include refid="MybatisSpecDAO_dynamic_where_fields" />
	 	Limit #{start},#{pageSize}
 	</select>
 	
 	<select id="MybatisSpecDAO_select_byIds" parameterType="list" resultMap="SpecDOResultMap">
 		SELECT
 			<include refid="MybatisSpecDAO_all_column_fields" />
 		FROM
 			base_spec
 		WHERE id IN
 		<foreach collection="list" index="index" item="item" open="(" separator="," close=")">
 			#{item}
 		</foreach>
 	</select>

</mapper>